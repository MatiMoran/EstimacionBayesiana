mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1)
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1)
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(df, aes(x = age)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 1,     # Control the width of the bins
fill = "blue",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histogram of Age", x = "Age", y = "Count") + # Add title and axis labels
theme_minimal()
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = age, y = .prediction)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 1,     # Control the width of the bins
fill = "blue",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histogram of Age", x = "Age", y = "Count") + # Add title and axis labels
theme_minimal()
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = age, y = .prediction)) +
ggtitle("Simulaciones de precio de mercado en base a la edad de Mbappe (N = 1000)") +
geom_point(aes(y = .prediction, group = .draw))
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = age)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 1,     # Control the width of the bins
fill = "blue",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histogram of Age", x = "Age", y = "Count") + # Add title and axis labels
theme_minimal()
set.seed(314159)
mbappe_pred = cracks %>%
filter(player_id == 342229) %>%
select(-market_value_in_eur, -log_market_value_in_eur) %>%
bind_rows(
data.frame(
player_id = rep(342229, 15),
name = rep("Kylian Mbappé", 15),
age = 26:40,
age_2 = (26:40)^2
) %>%
mutate(player_id = factor(player_id))
) %>%
add_predicted_draws(model_1, ndraws = 1000)
mbappe_pred %>%
ggplot(aes(x = age, y = .prediction)) +
ggtitle("Simulaciones de precio de mercado en base a la edad de Mbappe (N = 1000)") +
geom_point(aes(y = .prediction, group = .draw))
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = age)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 1,     # Control the width of the bins
fill = "blue",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histogram of Age", x = "Age", y = "Count") + # Add title and axis labels
theme_minimal()
cracks %>%
filter(player_id == 342229)
cracks %>%
filter(player_id == 342229) %>%
group_by(age) %>%
slice_max(order_by = market_value_in_eur, n = 1)
cracks %>%
filter(player_id == 342229) %>%
group_by(age) %>%
slice_max(order_by = market_value_in_eur, n = 1) %>%
distinct()
set.seed(314159)
mbappe_pred = cracks %>%
filter(player_id == 342229) %>%
group_by(age) %>%
slice_max(order_by = market_value_in_eur, n = 1) %>%
distinct() %>%
select(-market_value_in_eur, -log_market_value_in_eur) %>%
bind_rows(
data.frame(
player_id = rep(342229, 15),
name = rep("Kylian Mbappé", 15),
age = 26:40,
age_2 = (26:40)^2
) %>%
mutate(player_id = factor(player_id))
) %>%
add_predicted_draws(model_1, ndraws = 1000)
mbappe_pred %>%
ggplot(aes(x = age, y = .prediction)) +
ggtitle("Simulaciones de precio de mercado en base a la edad de Mbappe (N = 1000)") +
geom_point(aes(y = .prediction, group = .draw))
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = age)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 1,     # Control the width of the bins
fill = "blue",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks", x = "Edad", y = "Count") + # Add title and axis labels
theme_minimal()
cracks %>%
filter(player_id == 342229) %>%
group_by(age) %>%
slice_max(order_by = market_value_in_eur, n = 1) %>%
distinct()
print("a")
print("La probabilidad de que haga peak a los 26 es de" + 5)
set.seed(314159)
players_with_history = football %>%
filter(age %in% c(20, 35)) %>%
group_by(player_id) %>%
filter(any(age == 20) & any(age == 35)) %>%
pull(player_id) %>%
unique()
cracks = football[football$player_id %in% head(players_with_history, 50),]
player_ids = c(28003, 8198, 68290, 342229)
cracks = rbind(cracks, football[football$player_id %in% player_ids,])
cracks_10 = football[football$player_id %in% head(players_with_history, 10),]
ggplot(data = cracks_10, aes(age, market_value_in_eur, color = name)) +
ggtitle("Precio de mercado historico por jugador (N = 10)") +
geom_smooth(method = "loess", se = FALSE) +
theme(legend.position = "none") +
labs(x="Edad", y="Valor (EUR)") +
scale_y_continuous(labels = scales::label_dollar()) +
lims(y = c(0,40000000))
ggplot(data = cracks_10, aes(age, log_market_value_in_eur, color = name)) +
ggtitle("Log-Precio de mercado historico por jugador (N = 10)") +
geom_smooth(method = "loess", se = FALSE) +
theme(legend.position = "none") +
labs(x="Edad", y="Log-Valor (EUR)") +
scale_y_continuous(labels = scales::label_dollar()) +
lims(y = c(10,18))
ggplot(cracks_10, aes(x = age, y = log_market_value_in_eur)) +
geom_point() +
facet_wrap(~ player_id) +
ggtitle("Plot de 10 jugadores distintos")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
mbappe_pred %>%
filter(age == 26) %>%
count() %>%
mutate(percentage = n / nrow(df))
mbappe_pred %>%
filter(age == 26) %>%
count()
mbappe_pred
mbappe_pred %>%
filter(age == 26)
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1)
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26)
mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26) %>%
count()
mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26) %>%
length()
mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26) %>%
length()
mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26) %>%
length()
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26)
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26)
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26) %>% length()
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26) %>% nfrow()
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26) %>% nrow()
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age %in% c(26, 27, 28)) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age %in% c(26, 27, 28)) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
set.seed(314159)
mbappe_pred = cracks %>%
filter(player_id == 342229) %>%
group_by(age) %>%
slice_max(order_by = market_value_in_eur, n = 1) %>%
distinct() %>%
select(-market_value_in_eur, -log_market_value_in_eur) %>%
bind_rows(
data.frame(
player_id = rep(342229, 15),
name = rep("Kylian Mbappé", 15),
age = 26:40,
age_2 = (26:40)^2
) %>%
mutate(player_id = factor(player_id))
) %>%
add_predicted_draws(model_1, ndraws = 1000)
mbappe_pred %>%
ggplot(aes(x = age, y = .prediction)) +
ggtitle("Simulaciones de precio de mercado en base a la edad de Mbappe (S=1000)") +
geom_point(aes(y = .prediction, group = .draw))
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = age)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 1,     # Control the width of the bins
fill = "blue",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks para cada prediccion de carrera (S=1000)", x = "Edad", y = "Count") + # Add title and axis labels
theme_minimal()
model_1
mcmc_trace(model_1, pars = "b_Intercept")
mcmc_trace(model_1, pars = "intercept")
mcmc_trace(model_1, pars = "(intercept)")
mcmc_trace(model_1, pars = "age")
mcmc_trace(model_1, pars = "age^2")
mcmc_trace(model_1, pars = "age_2")
mcmc_trace(model_1, pars = c("age","age_2")
)
mcmc_trace(model_1, pars = c("(Intercept)","age","age_2"))
mcmc_trace(model_1, pars = c("(Intercept)","age","age_2"))
mcmc_dens_overlay(model_1, pars = c("(Intercept)","age","age_2"))
mcmc_acf(model_1, pars = c("(Intercept)","age","age_2"))
neff_ratio(model_1)
rhat(model_1)
mcmc_trace(model_1, pars = c("(Intercept)","age","age_2"))
mcmc_dens_overlay(model_1, pars = c("(Intercept)","age","age_2"))
mcmc_acf(model_1, pars = c("(Intercept)","age","age_2"))
neff_ratio(model_1)
rhat(model_1)
player_ids <- expensive_playes_ids$player_id
player_names <- cracks %>%
filter(player_id %in% player_ids) %>%
select(player_id, name) %>%
distinct()
cracks %>%
filter(player_id %in% player_ids) %>%
add_linpred_draws(model_1, ndraws = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
ggtitle("Curvas con intercepts para los 5 jugadores más caros (N=50)") +
geom_line( aes(y = .linpred, group = paste(player_id, .draw), color = name), alpha = 0.1) +
geom_point(aes(color = name)) +
guides(color = guide_legend(title = "Jugadores")) +
theme(legend.position = "right")
mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1)
mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1)
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = .prediction)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 1,     # Control the width of the bins
fill = "darkorange",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks para cada prediccion de carrera (S=1000)", x = "log-Valor mercado", y = "Count") + # Add title and axis labels
theme_minimal()
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1)
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = .prediction)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 0.1,     # Control the width of the bins
fill = "darkorange",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks para cada prediccion de carrera (S=1000)", x = "log-Valor mercado", y = "Count") + # Add title and axis labels
theme_minimal()
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = .prediction)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 0.1,     # Control the width of the bins
fill = "darkorange",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks para cada prediccion de carrera (S=1000)", x = "log-Valor mercado", y = "Count") + # Add title and axis labels
theme_minimal() +
geom_text(stat = "bin", aes(label = ..count..), vjust = -0.5, size = 3)
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = .prediction)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 0.1,     # Control the width of the bins
fill = "darkorange",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks para cada prediccion de carrera (S=1000)", x = "log-Valor mercado", y = "Count") + # Add title and axis labels
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),   # Rotate x-axis labels
axis.text.y = element_text(size = 12))
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = .prediction)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 0.1,     # Control the width of the bins
fill = "darkorange",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks para cada prediccion de carrera (S=1000)", x = "log-Valor mercado", y = "Count") + # Add title and axis labels
theme_minimal() +
geom_text(stat = "bin", aes(label = ..count..), vjust = -0.5, size = 3) + # Add count labels to bins
scale_x_continuous(breaks = seq(min(mbappe_pred$.prediction), max(mbappe_pred$.prediction), by = 0.1)) # Add x-axis breaks for every bin
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = .prediction)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 0.1,     # Control the width of the bins
fill = "darkorange",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks para cada prediccion de carrera (S=1000)", x = "log-Valor mercado", y = "Count") + # Add title and axis labels
theme_minimal()
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(log_market_value_in_eur > 19.5 | log_market_value_in_eur > 20.5) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(log_market_value_in_eur > 19.5 | log_market_value_in_eur > 20.5) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction > 19.5 | .prediction > 20.5) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction > 19.7 | .prediction > 20.3) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction > 19.8 | .prediction > 20.2) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
exp(19.8)
exp(20.2)
log(397219666)
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction > 19.8 & .prediction > 20.2) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction > 19 & .prediction > 21) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction > 19 & .prediction < 21) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction > 19 & .prediction < 20) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction > 19 & .prediction < 20.5) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
exp(19)
exp(20.5)
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction < 20.5) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction < 20) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction > 19 & .prediction < 20.5) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
