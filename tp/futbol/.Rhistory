ggplot(aes(x = age)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 1,     # Control the width of the bins
fill = "blue",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks para cada prediccion de carrera (S=1000)", x = "Edad", y = "Count") + # Add title and axis labels
theme_minimal()
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age %in% c(26, 27, 28)) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = .prediction)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 0.1,     # Control the width of the bins
fill = "darkorange",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks para cada prediccion de carrera (S=1000)", x = "log-Valor mercado", y = "Count") + # Add title and axis labels
theme_minimal()
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction > 19 & .prediction < 20.5) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
model_1_prior <- update(model_1, prior_PD = TRUE)
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
cracks %>%
add_linpred_draws(model_1_prior, ndraws = 200) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
geom_line(aes(y = .linpred, group = paste(player_id, .draw)), alpha = 0.1) +
ggtitle("Diferentes modelos generados con el prior (N=54, S=200)") +
labs(x="Edad", y="Log-Valor (EUR)") +
scale_y_continuous(labels = scales::label_dollar())
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
prior_summary(model_1)
tidy_summary_1 <- tidy(model_1, effects = "fixed",
conf.int = TRUE, conf.level = 0.95)
tidy_summary_1
mcmc_trace(model_1, pars = c("(Intercept)","age","age_2"))
mcmc_dens_overlay(model_1, pars = c("(Intercept)","age","age_2"))
mcmc_acf(model_1, pars = c("(Intercept)","age","age_2"))
neff_ratio(model_1)
rhat(model_1)
set.seed(314159)
cracks %>%
add_linpred_draws(model_1, ndraws = 20) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
geom_line(aes(y = .linpred, group = paste(player_id, .draw)), alpha = 0.1) +
geom_line(data = data.frame(age = seq(min(cracks$age), max(cracks$age), length.out = 100)),
aes(x = age, y = quadratic_fun(age, tidy_summary_1$estimate[3],   tidy_summary_1$estimate[2], tidy_summary_1$estimate[1])),
color = "blue", size = 1) +
ggtitle("Diferentes samples de la posterior para jugadores (N=54, S=20)") +
labs(x="Edad", y="Log-Valor (EUR)") +
scale_y_continuous(labels = scales::label_dollar())
cracks %>%
add_linpred_draws(model_1, ndraws = 4) %>%
ggplot(aes(x = age, y=log_market_value_in_eur)) +
geom_line(aes(y = .linpred, group = paste(player_id, .draw)), alpha = 0.5) +
geom_line(data = data.frame(age = seq(min(cracks$age), max(cracks$age), length.out = 100)),
aes(x = age, y = quadratic_fun(age, tidy_summary_1$estimate[3],   tidy_summary_1$estimate[2], tidy_summary_1$estimate[1])),
color = "blue", size = 1) +
facet_wrap(~ .draw) +
ggtitle("Diferentes samples de la posterior para jugadores (N=54, S=4)") +
labs(x="Edad", y="Log-Valor (EUR)") +
scale_y_continuous(labels = scales::label_dollar())
set.seed(314159)
cracks %>%
add_predicted_draws(model_1, ndraws = 100) %>%
ggplot(aes(x = age)) +
geom_density(aes(x = .prediction, group = .draw), alpha = 0.3) +
ggtitle("Plot de densidad de las diferentes samples de la posterior (S=100)")
pp_check(model_1, nreps = 50) +
xlab("cracks")
player_summaries_1 <- model_1 %>%
spread_draws(`(Intercept)`, b[,player_id]) %>%
mutate(player_intercept = `(Intercept)` + b) %>%
select(-`(Intercept)`, -b) %>%
median_qi(.width = 0.80) %>%
select(player_id, player_intercept, .lower, .upper)
player_summaries_1 %>%
filter(player_id %in% c("player_id:4360", "player_id:6893", "player_id:7767"))
cracks %>%
filter(player_id %in% c(4360, 8883, 6893)) %>%
add_linpred_draws(model_1, ndraws = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
geom_line(
aes(y = .linpred, group = paste(player_id, .draw), color = factor(player_id)),
alpha = 0.1) +
geom_point(aes(color = factor(player_id))) +
scale_color_manual(values = c("4360" = "blue", "6893" = "red", "8883" = "darkgreen"), labels = c("4360" = "Arjen Robben", "6893" = "Gabriel Tamas", "8883" = 'Emmanuel Adebayor'))
quadratic_data <- player_summaries_1 %>%
mutate(age = list(seq(min(cracks$age), max(cracks$age), length.out = 100))) %>%
unnest(age) %>%
mutate(log_market_value_in_eur = mapply(quadratic_fun, age, tidy_summary_1$estimate[3], tidy_summary_1$estimate[2],player_intercept))
ggplot(cracks, aes(x = age, y = log_market_value_in_eur)) +
ggtitle("Curvas de regresion para cada intercept (N=54)") +
geom_line(data = quadratic_data,
aes(x = age, y = log_market_value_in_eur, group = player_id),
color = "gray",
alpha=0.5
) +
geom_line(data = data.frame(age = seq(min(cracks$age), max(cracks$age), length.out = 100)),
aes(x = age, y = quadratic_fun(age, tidy_summary_1$estimate[3], tidy_summary_1$estimate[2], tidy_summary_1$estimate[1])),
color = "blue",
size = 1
)
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
player_ids <- rbind(expensive_playes_ids, cheap_player_ids)$player_id
player_names <- cracks %>%
filter(player_id %in% player_ids) %>%
select(player_id, name) %>%
distinct()
cracks %>%
filter(player_id %in% player_ids) %>%
add_linpred_draws(model_1, ndraws = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
ggtitle("Curvas con intercepts para los 5 jugadores más caros y baratos (N=54)") +
geom_line( aes(y = .linpred, group = paste(player_id, .draw), color = name), alpha = 0.1) +
geom_point(aes(color = name)) +
guides(color = guide_legend(title = "Jugadores")) +
theme(legend.position = "right")
tidy_sigma <- tidy(model_1, effects = "ran_pars")
tidy_sigma
sigma_0 <- tidy_sigma[1,3]
sigma_y <- tidy_sigma[2,3]
sigma_0^2 / (sigma_0^2 + sigma_y^2)
sigma_y^2 / (sigma_0^2 + sigma_y^2)
player_ids <- expensive_playes_ids$player_id
player_names <- cracks %>%
filter(player_id %in% player_ids) %>%
select(player_id, name) %>%
distinct()
cracks %>%
filter(player_id %in% player_ids) %>%
add_linpred_draws(model_1, ndraws = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
ggtitle("Curvas con intercepts para los 5 jugadores más caros (N=54)") +
geom_line( aes(y = .linpred, group = paste(player_id, .draw), color = name), alpha = 0.1) +
geom_point(aes(color = name)) +
guides(color = guide_legend(title = "Jugadores")) +
theme(legend.position = "right")
player_summaries_1 %>%
filter(player_id %in% sapply(expensive_playes_ids, function(x) paste0("player_id:", x)))
set.seed(314159)
mbappe_pred = cracks %>%
filter(player_id == 342229) %>%
group_by(age) %>%
slice_max(order_by = market_value_in_eur, n = 1) %>%
distinct() %>%
select(-market_value_in_eur, -log_market_value_in_eur) %>%
bind_rows(
data.frame(
player_id = rep(342229, 15),
name = rep("Kylian Mbappé", 15),
age = 26:40,
age_2 = (26:40)^2
) %>%
mutate(player_id = factor(player_id))
) %>%
add_predicted_draws(model_1, ndraws = 1000)
mbappe_pred %>%
ggplot(aes(x = age, y = .prediction)) +
ggtitle("Simulaciones de precio de mercado en base a la edad de Mbappe (S=1000)") +
geom_point(aes(y = .prediction, group = .draw))
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = age)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 1,     # Control the width of the bins
fill = "blue",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks para cada prediccion de carrera (S=1000)", x = "Edad", y = "Count") + # Add title and axis labels
theme_minimal()
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age %in% c(26, 27, 28)) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = .prediction)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 0.1,     # Control the width of the bins
fill = "darkorange",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks para cada prediccion de carrera (S=1000)", x = "log-Valor mercado", y = "Count") + # Add title and axis labels
theme_minimal()
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction > 19 & .prediction < 20.5) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
mcmc_trace(model_1, pars = c("(Intercept)","age","age_2"))
mcmc_dens_overlay(model_1, pars = c("(Intercept)","age","age_2"))
mcmc_acf(model_1, pars = c("(Intercept)","age","age_2"))
neff_ratio(model_1)
rhat(model_1)
set.seed(314159)
cracks %>%
add_linpred_draws(model_1, ndraws = 20) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
geom_line(aes(y = .linpred, group = paste(player_id, .draw)), alpha = 0.1) +
geom_line(data = data.frame(age = seq(min(cracks$age), max(cracks$age), length.out = 100)),
aes(x = age, y = quadratic_fun(age, tidy_summary_1$estimate[3],   tidy_summary_1$estimate[2], tidy_summary_1$estimate[1])),
color = "blue", size = 1) +
ggtitle("Diferentes samples de la posterior para jugadores (N=54, S=20)") +
labs(x="Edad", y="Log-Valor (EUR)") +
scale_y_continuous(labels = scales::label_dollar())
cracks %>%
add_linpred_draws(model_1, ndraws = 4) %>%
ggplot(aes(x = age, y=log_market_value_in_eur)) +
geom_line(aes(y = .linpred, group = paste(player_id, .draw)), alpha = 0.5) +
geom_line(data = data.frame(age = seq(min(cracks$age), max(cracks$age), length.out = 100)),
aes(x = age, y = quadratic_fun(age, tidy_summary_1$estimate[3],   tidy_summary_1$estimate[2], tidy_summary_1$estimate[1])),
color = "blue", size = 1) +
facet_wrap(~ .draw) +
ggtitle("Diferentes samples de la posterior para jugadores (N=54, S=4)") +
labs(x="Edad", y="Log-Valor (EUR)") +
scale_y_continuous(labels = scales::label_dollar())
set.seed(314159)
cracks %>%
add_predicted_draws(model_1, ndraws = 100) %>%
ggplot(aes(x = age)) +
geom_density(aes(x = .prediction, group = .draw), alpha = 0.3) +
ggtitle("Plot de densidad de las diferentes samples de la posterior (S=100)")
pp_check(model_1, nreps = 50) +
xlab("cracks")
player_summaries_1 <- model_1 %>%
spread_draws(`(Intercept)`, b[,player_id]) %>%
mutate(player_intercept = `(Intercept)` + b) %>%
select(-`(Intercept)`, -b) %>%
median_qi(.width = 0.80) %>%
select(player_id, player_intercept, .lower, .upper)
player_summaries_1 %>%
filter(player_id %in% c("player_id:4360", "player_id:6893", "player_id:7767"))
cracks %>%
filter(player_id %in% c(4360, 8883, 6893)) %>%
add_linpred_draws(model_1, ndraws = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
geom_line(
aes(y = .linpred, group = paste(player_id, .draw), color = factor(player_id)),
alpha = 0.1) +
geom_point(aes(color = factor(player_id))) +
scale_color_manual(values = c("4360" = "blue", "6893" = "red", "8883" = "darkgreen"), labels = c("4360" = "Arjen Robben", "6893" = "Gabriel Tamas", "8883" = 'Emmanuel Adebayor'))
quadratic_data <- player_summaries_1 %>%
mutate(age = list(seq(min(cracks$age), max(cracks$age), length.out = 100))) %>%
unnest(age) %>%
mutate(log_market_value_in_eur = mapply(quadratic_fun, age, tidy_summary_1$estimate[3], tidy_summary_1$estimate[2],player_intercept))
ggplot(cracks, aes(x = age, y = log_market_value_in_eur)) +
ggtitle("Curvas de regresion para cada intercept (N=54)") +
geom_line(data = quadratic_data,
aes(x = age, y = log_market_value_in_eur, group = player_id),
color = "gray",
alpha=0.5
) +
geom_line(data = data.frame(age = seq(min(cracks$age), max(cracks$age), length.out = 100)),
aes(x = age, y = quadratic_fun(age, tidy_summary_1$estimate[3], tidy_summary_1$estimate[2], tidy_summary_1$estimate[1])),
color = "blue",
size = 1
)
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
player_ids <- rbind(expensive_playes_ids, cheap_player_ids)$player_id
player_names <- cracks %>%
filter(player_id %in% player_ids) %>%
select(player_id, name) %>%
distinct()
cracks %>%
filter(player_id %in% player_ids) %>%
add_linpred_draws(model_1, ndraws = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
ggtitle("Curvas con intercepts para los 5 jugadores más caros y baratos (N=54)") +
geom_line( aes(y = .linpred, group = paste(player_id, .draw), color = name), alpha = 0.1) +
geom_point(aes(color = name)) +
guides(color = guide_legend(title = "Jugadores")) +
theme(legend.position = "right")
tidy_sigma <- tidy(model_1, effects = "ran_pars")
tidy_sigma
sigma_0 <- tidy_sigma[1,3]
sigma_y <- tidy_sigma[2,3]
sigma_0^2 / (sigma_0^2 + sigma_y^2)
sigma_y^2 / (sigma_0^2 + sigma_y^2)
player_ids <- expensive_playes_ids$player_id
player_names <- cracks %>%
filter(player_id %in% player_ids) %>%
select(player_id, name) %>%
distinct()
cracks %>%
filter(player_id %in% player_ids) %>%
add_linpred_draws(model_1, ndraws = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
ggtitle("Curvas con intercepts para los 5 jugadores más caros (N=54)") +
geom_line( aes(y = .linpred, group = paste(player_id, .draw), color = name), alpha = 0.1) +
geom_point(aes(color = name)) +
guides(color = guide_legend(title = "Jugadores")) +
theme(legend.position = "right")
player_summaries_1 %>%
filter(player_id %in% sapply(expensive_playes_ids, function(x) paste0("player_id:", x)))
set.seed(314159)
mbappe_pred = cracks %>%
filter(player_id == 342229) %>%
group_by(age) %>%
slice_max(order_by = market_value_in_eur, n = 1) %>%
distinct() %>%
select(-market_value_in_eur, -log_market_value_in_eur) %>%
bind_rows(
data.frame(
player_id = rep(342229, 15),
name = rep("Kylian Mbappé", 15),
age = 26:40,
age_2 = (26:40)^2
) %>%
mutate(player_id = factor(player_id))
) %>%
add_predicted_draws(model_1, ndraws = 1000)
mbappe_pred %>%
ggplot(aes(x = age, y = .prediction)) +
ggtitle("Simulaciones de precio de mercado en base a la edad de Mbappe (S=1000)") +
geom_point(aes(y = .prediction, group = .draw))
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = age)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 1,     # Control the width of the bins
fill = "blue",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks para cada prediccion de carrera (S=1000)", x = "Edad", y = "Count") + # Add title and axis labels
theme_minimal()
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age == 26) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age %in% c(26, 27, 28)) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
mbappe_pred %>%
group_by(.draw) %>%               # Group by the .draw column
slice_max(order_by = .prediction, n = 1) %>%
ggplot(aes(x = .prediction)) +         # Map 'age' column to the x-axis
geom_histogram(binwidth = 0.1,     # Control the width of the bins
fill = "darkorange",    # Set the color of the bars
color = "black",  # Set the color of the borders of the bars
alpha = 0.7) +    # Make the bars semi-transparent
labs(title = "Histograma de los peaks para cada prediccion de carrera (S=1000)", x = "log-Valor mercado", y = "Count") + # Add title and axis labels
theme_minimal()
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(.prediction > 19 & .prediction < 20.5) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
expensive_playes_ids <- player_summaries_1 %>%
arrange(desc(player_intercept)) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
cheap_player_ids <- player_summaries_1 %>%
arrange(player_intercept) %>%
head(5) %>%
select(player_id) %>%
mutate(player_id = as.integer(sub("player_id:", "", player_id)))
player_ids <- rbind(expensive_playes_ids, cheap_player_ids)$player_id
player_names <- cracks %>%
filter(player_id %in% player_ids) %>%
select(player_id, name) %>%
distinct()
cracks %>%
filter(player_id %in% player_ids) %>%
add_linpred_draws(model_1, ndraws = 100) %>%
ggplot(aes(x = age, y = log_market_value_in_eur)) +
ggtitle("Curvas de regresion para los 5 jugadores más caros y mas baratos (N=54)") +
geom_line( aes(y = .linpred, group = paste(player_id, .draw), color = name), alpha = 0.1) +
geom_point(aes(color = name)) +
guides(color = guide_legend(title = "Jugadores")) +
theme(legend.position = "right")
quadratic_data <- player_summaries_1 %>%
mutate(age = list(seq(min(cracks$age), max(cracks$age), length.out = 100))) %>%
unnest(age) %>%
mutate(log_market_value_in_eur = mapply(quadratic_fun, age, tidy_summary_1$estimate[3], tidy_summary_1$estimate[2],player_intercept))
ggplot(cracks, aes(x = age, y = log_market_value_in_eur)) +
ggtitle("Curvas de regresion para cada jugador (N=54)") +
geom_line(data = quadratic_data,
aes(x = age, y = log_market_value_in_eur, group = player_id),
color = "gray",
alpha=0.5
) +
geom_line(data = data.frame(age = seq(min(cracks$age), max(cracks$age), length.out = 100)),
aes(x = age, y = quadratic_fun(age, tidy_summary_1$estimate[3], tidy_summary_1$estimate[2], tidy_summary_1$estimate[1])),
color = "blue",
size = 1
)
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
25:40
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age %in% 20:35) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age %in% 21:34) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
filter(age %in% 22:33) %>%
nrow()) /
(mbappe_pred %>%
group_by(.draw) %>%
slice_max(order_by = .prediction, n = 1) %>%
nrow())
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
source("D:/files/Vault/files/Repos/UBA/EstimacionBayesiana/tp/futbol/output.Rmd")
